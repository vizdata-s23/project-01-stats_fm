---
title: "Project title"
subtitle: "STA/ISS 313 - Project 1"
author: "Team Name"
format: html
editor: visual
---

## Abstract

(1 paragraph): Project abstract.

------------------------------------------------------------------------

## Introduction

(1-2 paragraphs): Brief introduction to the dataset. You may repeat some of the information about the dataset provided in the introduction to the dataset on the TidyTuesday repository, paraphrasing on your own terms. Imagine that your project is a standalone document and the grader has no prior knowledge of the dataset.

## Question 1: Popular Station Genres Across the U.S. and North Carolina

### Introduction

In this question, we aim to examine where in the United States there is the highest concentration of radio stations and if that varies by the genre of the station. We are interested in seeing if there are regional patterns for a specific kind of radio station (e.g. urban music, religious music, talk stations). In addition to examining patterns across the country, we are curious about what radio stations are the most concentrated in our home state of North Carolina. 

In order to answer this, we will need to use the format column (which specifies the kind of radio station) of the state_stations data set so we can visualize potential patterns across the country. In addition, the state column of the state_stations data set will be important to calculate the number of radio stations in each state. We selected this question because we were curious about the patterns in what kind of radio stations were the most popular, and we thought there may be some relationship between the popularity of a certain genre of radio and the region of that station.

### Approach

Our first plot will be a choropleth plot of the United States showing the number of radio stations present in each state, faceted by the genre. We selected this kind of density map because we thought it would make it easy to draw comparisons between states and visualize the patterns of where certain types of radio stations were the most prevalent. Prior to creating this plot, we had to bucket the various genres into broader categories. Initially, the format column had about 1,258 unique values. We decided to create 6 unique broad genres and categorize the formats like this. 

Our second plot will be a map of North Carolina with the most populous cities plotted on the map. In addition, it will be a scatterplot of points on top of the North Carolina map to visualize the relationship between the location of radio stations and population dense cities. The points will be colored by radio station genre. We thought a scatterplot would be the best way to visualize this spatial data in comparison to the location of cities, and coloring the data points would be an easy way to distinguish the various station genres.\

### Analysis

(2-3 code blocks, 2 figures, text/code comments as needed): In this section, provide the code that generates your plots. Use scale functions to provide nice axis labels and guides. You are welcome to use theme functions to customize the appearance of your plot, but you are not required to do so. All plots must be made with **ggplot2**. Do not use base R or lattice plotting functions.

```{r}
#| label: latitude and longitude data generation

# raw_contour <- read_delim(
#   "data/FM_service_contour_current.txt",
#   delim = "|"
# )
# 
# conv_contour <- raw_contour |>
#   select(-last_col()) |>
#   set_names(nm = c(
#     "application_id", "service", "lms_application_id", "dts_site_number", "transmitter_site",
#     glue::glue("deg_{0:360}")
#   ))

# lng_contour <- conv_contour |>
#   separate(
#     transmitter_site, 
#     into = c("site_lat", "site_long"), 
#     sep = " ,") |>
#   pivot_longer(
#     names_to = "angle",
#     values_to = "values",
#     cols = deg_0:deg_360
#   ) |>
#   mutate(
#     angle = str_remove(angle, "deg_"),
#     angle = as.integer(angle)
#   ) |>
#   separate(
#     values,
#     into = c("deg_lat", "deg_lng"),
#     sep = " ,"
#   )

# site_lat_long <- lng_contour %>% 
#   select(application_id, service, lms_application_id, site_lat, site_long)
# 
# site_lat_long <- unique(site_lat_long)
# 
# write_csv(site_lat_long, "data/site_lat_long.csv")

```

```{r}
#| label:  creating new genre column

library(tidyverse)

state_stations <- read_csv(file = 'data/state_stations.csv')
coords <- read_csv(file = 'data/site_lat_long.csv')
station_info <- read_csv(file='data/station_info.csv')

#state_stations |>
  #group_by(format) |>
  #summarise(n())

Genre_Lists <- list(

   c('Religious', 'Christian', 'Gospel', 'Religion', 'Catholic', 'worship'),
   c('Urban', 'R&B', 'Blues', 'Rhythmic','Rhythym and Blues','Hip Hop', 'mainstream urban', 'Urban adult contemporary', 'Urban contemporary'),
      c('Pop', 'Contemporary Hit', 'adult contemporary', 'Top 40 (CHR)', 'Hot AC', 'CHR'),
  c( 'Rock', 'Alternative','Indie'),
  
  c('Country','Southern', 'Bluegrass'),
  
  c('News', 'News/Talk', 'Talk'))

tmpstr <- Reduce(function(s, lst) gsub(paste0("(", paste(lst, collapse = "|"), ")"), lst[1], s, ignore.case = TRUE),
                 Genre_Lists, init = state_stations$format)
tmpGenres <- regmatches(tmpstr,
                        gregexpr(paste0("(", paste0(sapply(Genre_Lists, `[[`, 1), collapse = "|"), ")"),
                                 tmpstr, ignore.case = TRUE))
tmpGenres <- replace(tmpGenres, sapply(tmpGenres, Negate(length)), NA_character_)
tmpGenres <- sapply(tmpGenres, tail, n = 1)
tmpGenres[ is.na(tmpGenres) ] <- "Not Found"
state_stations$Genre <- tmpGenres

state_stations<-state_stations%>%
filter(!is.na(format))%>%
filter(Genre!='Not Found')

state_stations%>%
  group_by(Genre)%>%
  summarise(n())
```

```{r}
#| label: joining all DFs together

state <-state_stations |> dplyr::right_join(station_info, by = c("call_sign"))
north_carolina <-state %>%
  filter(state=="North_Carolina")


coords
```

```{r}
new <-coords|> dplyr::inner_join(north_carolina, by = c("application_id"="facility_id"))
new
```

```{r}
#| label: US choropleth map

library(maps)

us_states <- map_data("state")

#ggplot() +
#  geom_polygon(data = us_states,
#               aes(x = long, y = lat, group = group),
#              color = "black", fill = "lightpink")

number_stations <- new %>%
  group_by(state, Genre) %>%
  summarise(n = n())

number_stations <- drop_na(number_stations)
number_stations$state <- tolower(number_stations$state)

merged_stations <- full_join(us_states, number_stations, 
                             by = c("region" = "state"))

merged_stations <- merged_stations%>%
  filter(!is.na(region))%>%
  filter(!is.na(Genre))

ggplot() +
#   geom_polygon(data = us_states,
#               aes(x = long, y = lat, group = group),
#               color = "black", fill = "lightpink")+
  geom_polygon(data = merged_stations, 
               aes(x = long, y = lat, group = group, fill = n), 
               color = "black") +
    facet_wrap(~ Genre, nrow=3, ncol=2, scales="free") +
  scale_fill_continuous(
  low = "cornflowerblue",high = "darkblue")+
    theme_void()




```

![](https://labs-az-14.oit.duke.edu:30008/chunk_output/4023D1430c283306/A1EA501B/cug972g1zpo71/000056.png)

```{r}
map <- map_data("county")
nc <- subset(map, region =="north carolina")


ggplot(data = nc) + 
  geom_polygon(aes(x = long, y = lat, group = group), 
               color = "black", fill = "blue")

```

### Discussion

(1-3 paragraphs): In the Discussion section, interpret the results of your analysis. Identify any trends revealed (or not revealed) by the plots. Speculate about why the data looks the way it does.

## Question 2: Identifying correlation between population size and the number of radio stations in various states/regions of the United States

### Introduction

(1-2 paragraphs): Introduction to the question and what parts of the dataset are necessary to answer the question. Also discuss why you're interested in this question.

Population size and density varies across the United States. For example, according to *World Population Review* (<https://worldpopulationreview.com/state-rankings/state-densities>), in 2023 Wyoming had a population of 581,075 and a population density of about 6 people per square mile. Meanwhile, New York has a population of 19,300,000 people and a population density of about 410 people per square mile. Given this radical variability in population and population density, it may be possible to find a correlation between these quantities and the variability in the number of radio stations in each state. Exploring this relationship may help us understand how a population or population density influences the number of radio stations that exist in a particular state or region.

### Approach

(1-2 paragraphs): Describe what types of plots you are going to make to address your question. For each plot, provide a clear explanation as to why this plot (e.g. boxplot, barplot, histogram, etc.) is best for providing the information you are asking about. The two plots should be of different types, and at least one of the two plots needs to use either color mapping or facets.

### Analysis

(2-3 code blocks, 2 figures, text/code comments as needed): In this section, provide the code that generates your plots. Use scale functions to provide nice axis labels and guides. You are welcome to use theme functions to customize the appearance of your plot, but you are not required to do so. All plots must be made with **ggplot2**. Do not use base R or lattice plotting functions.

### Discussion

(1-3 paragraphs): In the Discussion section, interpret the results of your analysis. Identify any trends revealed (or not revealed) by the plots. Speculate about why the data looks the way it does.

```{r}
#| label: data_prep for Q2
pop_data <- read_csv("data/population_data_2022.csv")

# label states
pop_data <- pop_data %>% 
  mutate(
    region_name = case_when(
      REGION == 1 ~ "NorthEast",
      REGION == 2 ~ "MidWest",
      REGION == 3 ~ "South",
      REGION == 4 ~ "West",
    )
  ) %>% 
  select(
    region_name, NAME, POPESTIMATE2022
  )

# remove region names
pop_data <- pop_data[-c(1:14),]

# remove Puerto Rico
pop_data <- subset(pop_data, region_name != "Puerto Rico")

# remove '_" from space station state colums
state_stations$state <- sub("_", " ", state_stations$state)

state_stations_pop <- merge(x = state_stations, y = pop_data, by.x = "state", by.y = "NAME")
```

```{r}
#| label: Q2-2 ()

station_count <- distinct(state_stations_pop %>% group_by(state) %>% summarise(n=n(), region_name=region_name, population = POPESTIMATE2022))

ggplot(
  station_count
) +
  geom_density(
    aes(
      x = n,
    )
  ) +
  theme_minimal() +
  labs(
    x = "Number of Stations per State",
    y = "Density",
    title = "Distribution of Number of Stations By Sate",
    subtitle = "By Region"
  )

```

```{r}
ggplot(station_count) +
  geom_bin2d(
    aes(x = n, y = population), 
    binwidth = c(0.25, 500)
    )
```

```{r}
ggplot(
  station_count
) +
  geom_point(
    aes(
      x = n,
      y = state,
      
    )
  ) + 
  facet_wrap(~region_name)
```
